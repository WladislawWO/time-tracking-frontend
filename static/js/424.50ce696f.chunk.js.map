{"version":3,"file":"static/js/424.50ce696f.chunk.js","mappings":"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","sources":["api/httpClient.js","api/interceptor.js","api/queryKeys.js","webpack://lev-time-tracking-frontend/./src/components/CheckBox/style.module.scss?8a93","components/CheckBox/index.jsx","webpack://lev-time-tracking-frontend/./src/pages/Routine/style.module.scss?5c52","services/routineService.js","pages/Routine/useRoutine.js","api/hooks/useGetRoutineListQuery.js","pages/Routine/index.jsx"],"sourcesContent":["import axios from 'axios';\nimport { apiResponseInterceptor } from './interceptor';\n\nconst options = {\n  baseURL: process.env.REACT_APP_BASE_URL,\n  responseType: 'json',\n  headers: {\n    common: {\n      Accept: 'application/json',\n    },\n  },\n};\n\nconst httpClient = axios.create(options);\n// TODO: later\n// httpClient.interceptors.request.use(apiRequestInterceptor);\nhttpClient.interceptors.response.use(null, apiResponseInterceptor);\n\nexport default httpClient;\n","import { toast } from 'react-toastify';\n\nexport const apiRequestInterceptor = (config) => {\n  const { url } = config;\n  const token = localStorage.getItem('token');\n\n  if (!/^(http|https):/i.test(url)) {\n    const headers = {};\n\n    if (token) {\n      headers.Authorization = `Bearer ${token}`;\n    }\n\n    config.headers = {\n      ...config.headers,\n      ...headers,\n    };\n\n    config.url = `${url.replace(/^\\/+/, '')}`;\n\n    return config;\n  }\n\n  return config;\n};\n\nexport const apiResponseInterceptor = () => {\n  toast.error('Network error');\n};\n","export const queryKeys = {\n  time: 'time',\n  timeList: 'timeList',\n  total: 'total',\n  routineList: 'routineList',\n  routine: 'routine',\n  todoList: 'todoList',\n};\n","// extracted by mini-css-extract-plugin\nexport default {\"input\":\"style_input__-k4DQ\",\"checkbox\":\"style_checkbox__fYBDY\",\"label\":\"style_label__aXwop\"};","import { useState } from 'react';\nimport {\n  animated,\n  useSpring,\n  config,\n  useSpringRef,\n  useChain,\n} from 'react-spring';\nimport st from './style.module.scss';\n\nfunction Checkbox({ title, checked, onChange }) {\n  const [isChecked, setIsChecked] = useState(checked || false);\n  const checkboxAnimationRef = useSpringRef();\n  const checkboxAnimationStyle = useSpring({\n    backgroundColor: isChecked ? '#61dafb' : '#fff',\n    borderColor: isChecked ? '#61dafb' : '#fff',\n    config: config.gentle,\n    ref: checkboxAnimationRef,\n  });\n\n  const [checkmarkLength, setCheckmarkLength] = useState(null);\n\n  const checkmarkAnimationRef = useSpringRef();\n  const checkmarkAnimationStyle = useSpring({\n    x: isChecked ? 0 : checkmarkLength,\n    config: config.gentle,\n    ref: checkmarkAnimationRef,\n  });\n\n  useChain(\n    isChecked\n      ? [checkboxAnimationRef, checkmarkAnimationRef]\n      : [checkmarkAnimationRef, checkboxAnimationRef],\n    [0, 0.1],\n  );\n\n  // useEffect(() => {\n  //   setIsChecked(checked);\n  // }, [checked]);\n\n  const handleChange = () => {\n    if (onChange) {\n      onChange(!isChecked);\n    }\n    setIsChecked(!isChecked);\n  };\n\n  return (\n    <label className={st.label}>\n      <input\n        className={st.input}\n        type=\"checkbox\"\n        onChange={handleChange}\n      />\n      <animated.svg\n        style={checkboxAnimationStyle}\n        className={`${st.checkbox} ${isChecked ? 'checkbox--active' : ''}`}\n        aria-hidden=\"true\"\n        viewBox=\"0 0 15 11\"\n        fill=\"none\"\n      >\n        <animated.path\n          d=\"M1 4.5L5 9L14 1\"\n          strokeWidth=\"2\"\n          stroke=\"#fff\"\n          ref={(ref) => {\n            if (ref) {\n              setCheckmarkLength(ref.getTotalLength());\n            }\n          }}\n          strokeDasharray={checkmarkLength}\n          strokeDashoffset={checkmarkAnimationStyle.x}\n        />\n      </animated.svg>\n      {title}\n    </label>\n  );\n}\n\nexport default Checkbox;\n","// extracted by mini-css-extract-plugin\nexport default {\"wrapper\":\"style_wrapper__l+0Lz\",\"container\":\"style_container__huzdN\"};","import httpClient from '../api/httpClient';\n\nclass RoutineService {\n  completeRoutine({ _id, completed }) {\n    return httpClient.post('routine/complete', { _id, completed }).then((res) => res);\n  }\n\n  getRoutineList() {\n    return httpClient.get('routine').then((res) => res);\n  }\n\n  getRoutine(id) {\n    return httpClient.get(`routine/${id}`).then((res) => res);\n  }\n}\n\nexport const routineService = new RoutineService();\n","import { useEffect, useState } from 'react';\nimport { useMutation } from 'react-query';\nimport { useGetRoutineListQuery } from '../../api/hooks/useGetRoutineListQuery';\nimport { routineService } from '../../services/routineService';\n\nexport const useRoutine = () => {\n  const [list, setList] = useState([]);\n  const { data, isLoading } = useGetRoutineListQuery();\n  const { mutate, isLoading: isLoadingUpdate } = useMutation(routineService.completeRoutine);\n\n  const handleCompleted = (_id, completed) => {\n    mutate({ _id, completed });\n    setList(list.map((i) => (i._id === _id ? { ...i, completed } : i)));\n  };\n\n  useEffect(() => {\n    if (data?.data) {\n      setList(data.data);\n    }\n  }, [data?.data]);\n\n  return {\n    isLoading: isLoading || isLoadingUpdate,\n    list,\n    handleCompleted,\n  };\n};\n","import { useQuery } from 'react-query';\nimport { queryKeys } from '../queryKeys';\nimport { routineService } from '../../services/routineService';\n\nexport function useGetRoutineListQuery(options) {\n  const { isLoading, data } = useQuery(queryKeys.routineList, routineService.getRoutineList, {\n    ...options,\n  });\n\n  return {\n    isLoading,\n    data,\n  };\n}\n","import st from './style.module.scss';\nimport { useRoutine } from './useRoutine';\nimport Loader from '../../components/Loader';\nimport Checkbox from '../../components/CheckBox';\n\nfunction Routine() {\n  const {\n    list, isLoading, handleCompleted,\n  } = useRoutine();\n\n  return (\n    <div className={st.wrapper}>\n      <Loader isLoading={isLoading} />\n      <div className={st.container}>\n        {list.map(({ completed, name, _id }, i) => (\n          <Checkbox\n            key={i}\n            checked={completed}\n            title={name}\n            onChange={(completed) => handleCompleted(_id, completed)}\n          />\n        ))}\n      </div>\n    </div>\n  );\n}\n\nexport default Routine;\n"],"names":["httpClient","axios","baseURL","process","responseType","headers","common","Accept","interceptors","response","use","toast","queryKeys","time","timeList","total","routineList","routine","todoList","title","checked","onChange","useState","isChecked","setIsChecked","checkboxAnimationRef","useSpringRef","checkboxAnimationStyle","useSpring","backgroundColor","borderColor","config","ref","checkmarkLength","setCheckmarkLength","checkmarkAnimationRef","checkmarkAnimationStyle","x","useChain","className","st","type","animated","style","viewBox","fill","d","strokeWidth","stroke","getTotalLength","strokeDasharray","strokeDashoffset","routineService","RoutineService","_id","completed","then","res","id","useRoutine","list","setList","options","useQuery","getRoutineList","isLoading","data","useGetRoutineListQuery","useMutation","completeRoutine","mutate","isLoadingUpdate","useEffect","handleCompleted","map","i","Loader","name"],"sourceRoot":""}